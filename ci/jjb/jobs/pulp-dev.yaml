- job-template:
    name: 'pulp-{build_version}-dev-{os}'
    node: '{os}-os'
    properties:
        - qe-ownership
        - discard-old-builds
    scm:
        - pulp-ci-github
    wrappers:
        - config-file-provider:
            files:
                - file-id: rhn_credentials
                  variable: RHN_CREDENTIALS
        - inject:
            properties-content: |
                OS={os}
                PULP_BUILD=nightly
                PULP_VERSION={pulp_version}
    triggers:
        - reverse:
            jobs: 'pulp-packaging-{reverse_trigger}'
            result: 'success'
    builders:
        - fix-hostname
        - shell:
            !include-raw-escape:
                - 'ssh-setup.sh'
        - shell:
            !include-raw:
                - 'pulp-install{script-var}.sh'
        - shell:
            !include-raw-escape:
                - 'pulp-coverage-setup.sh'
                - 'pulp-smash-parameters.sh'
        - inject:
            properties-file: parameters.txt
        - trigger-builds:
            - project:
                - pulp-smash-runner
              block: true
              predefined-parameters: |
                  PULP_SMASH_SYSTEM_HOSTNAME=$PULP_SMASH_SYSTEM_HOSTNAME
                  PULP_SMASH_PULP_VERSION=$PULP_SMASH_PULP_VERSION
              block-thresholds:
                  build-step-failure-threshold: never
                  unstable-threshold: never
                  failure-threshold: never
              parameter-factories:
                  - factory: binaryfile
                    parameter-name: PRIVATE_KEY
                    file-pattern: pulp_server_key
                    no-files-found-action: FAIL
                  - factory: binaryfile
                    parameter-name: CA_CERT
                    file-pattern: cacert.pem
                    no-files-found-action: FAIL
        - copyartifact:
            project: pulp-smash-runner
            which-build: specific-build
            build-number: ${{TRIGGERED_BUILD_NUMBER_PULP_SMASH_RUNNER}}
            flatten: true
        - shell: |
            # Coverage report is introduced on Pulp 2.8 and requires Python
            # version 2.7+. Run the coverage report only if the system being
            # tested matches the required environment.
            if [ "$(echo -e 2.8\\n${{PULP_VERSION}} | sort -V | head -n 1)" = "2.8" ] && [ "${{OS}}" != "rhel6" ]; then
                export ANSIBLE_CONFIG="${{PWD}}/ci/ansible/ansible.cfg"
                ansible-playbook --connection local -i hosts ci/ansible/pulp_coverage.yaml \
                    -e pulp_coverage_action=report \
                    -e pulp_coverage_report_dir=/tmp \
                    -e pulp_coverage_report_xml=true
                cp /tmp/report.xml coverage.xml
            fi
        # TODO: Uncomment and update the configuration when sonar is ready to
        # be used
        # - conditional-step:
        #     condition-kind: regex-match
        #     regex: '2.8'
        #     label: '${{ENV,var="PULP_VERSION"}}'
        #     steps:
        #         - sonar:
        #             sonar-name: 'Sonar Test Server'
        - capture-logs
    publishers:
        - postbuildscript:
            script-only-if-succeeded: False
            script-only-if-failed: False
            builders:
              - shell: |
                  if [[ "${{OS}}" =~ "rhel" ]]; then
                      sudo subscription-manager unregister
                  fi
        - junit:
            results: junit-report.xml
        - cobertura:
            report-file: "coverage.xml"
            targets:
                - files:
                    healthy: 10
                    unhealthy: 20
                    failing: 30
                - method:
                    healthy: 50
                    unhealthy: 40
                    failing: 30
        - archive:
            artifacts: "*.tar.gz"
            allow-empty: true
        - email-notify-owners
        - delete-slave-node

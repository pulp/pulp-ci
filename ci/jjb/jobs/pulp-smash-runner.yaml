- job:
    name: pulp-smash-runner
    concurrent: true
    properties:
        - copyartifact:
            projects: pulp-*-dev-*
    node: f28-os
    parameters:
        - string:
            name: PULP_SMASH_SYSTEM_HOSTNAME
        - string:
            name: PULP_SMASH_PULP_VERSION
            decription: The Pulp version Pulp Smash will consider when running tests.
        - string:
            name: PULP_SMASH_PULP_USERNAME
            default: admin
        - string:
            name: PULP_SMASH_PULP_PASSWORD
            default: admin
        - choice:
            name: PULP_SMASH_AMQP_BROKER_SERVICE
            choices:
                - qpidd
                - rabbitmq
        - choice:
            name: PULP_SMASH_API_SCHEME
            choices:
                - https
                - http
        - bool:
            name: PULP_SMASH_API_VERIFY
            default: true
        - file:
            name: SSH_PRIVATE_KEY
            description: Private ssh key to connect on the server.
        - file:
            name: SSH_CUSTOM_CONFIG
            description: >
                If a custom SSH config is provided then it will be used instead
                of creating one. The variable {SSH_PRIVATE_KEY} will be
                replaced with the path of the SSH_PRIVATE_KEY file.
        - file:
            name: PULP_CA_CERT
            description: >
                The CA certificate that signed the Pulp apache server. If this
                is provided and PULP_SMASH_API_VERIFY is true then Pulp Smash
                will use the certificate to verify the HTTP[S] connection
        - file:
            name: PULP_SMASH_CUSTOM_SETTINGS
            description: >
                If a custom Pulp Smash settings file content is passed on this
                parameter then all other parameters will be ignored but
                SSH_PRIVATE_KEY and PULP_CA_CERT which will set up SSH
                connection and update the certificate trust respectively. The
                variable {PULP_CA_CERT_PATH} will be replaced with the path
                where the CA certificate was installed.
    properties:
        - qe-ownership
        - discard-old-builds
    scm:
        - pulp-ci-github
    wrappers:
        - ansicolor
        - timeout:
            # pulp-smash usually takes about an hour or two, so time it out
            # after 7:40 hours. This gives room to some tasks time out.
            timeout: 460
            abort: true
        - timestamps
    builders:
        - fix-hostname
        - shell: |
            # Useful for debugging
            getent passwd "$(id -u)"

            # Setup ssh config and private key
            mkdir ~/.ssh/controlmasters
            if [ -f SSH_CUSTOM_CONFIG ]; then
                sed -i -e "s|{SSH_PRIVATE_KEY_PATH}|${PWD}/PRIVATE_KEY|" SSH_CUSTOM_CONFIG
                cp SSH_CUSTOM_CONFIG ~/.ssh/config
            else
                cat > ~/.ssh/config <<EOF
            Host ${PULP_SMASH_SYSTEM_HOSTNAME}
                User jenkins
                StrictHostKeyChecking no
                UserKnownHostsFile /dev/null
                IdentityFile ${PWD}/PRIVATE_KEY
                ControlMaster auto
                ControlPersist 5m
                ControlPath ~/.ssh/controlmasters/%C
            EOF
            fi
            chmod 600 PRIVATE_KEY ~/.ssh/config

            # Set up the CA certificate that signed Pulp's apache server.
            export PULP_CA_CERT_PATH="/etc/pki/ca-trust/source/anchors/pulp-cacert.pem"
            sudo cp CA_CERT "${PULP_CA_CERT_PATH}"
            sudo update-ca-trust

            sudo dnf -y install ansible attr git libselinux-python
            export ANSIBLE_CONFIG="${PWD}/ci/ansible/ansible.cfg"
            if [ "${PULP_SMASH_API_VERIFY}" = "true" ]; then
                export PULP_SMASH_API_VERIFY="${PULP_CA_CERT_PATH}"
            fi
            if [ -f PULP_SMASH_CUSTOM_SETTINGS ]; then
                sed -i -e "s|{PULP_CA_CERT_PATH}|${PULP_CA_CERT_PATH}|" \
                    PULP_SMASH_CUSTOM_SETTINGS
                ansible-playbook --connection local --inventory "localhost," ci/ansible/pulp_2_tests.yaml \
                    -e pulp_smash_custom_settings="${PWD}/PULP_SMASH_CUSTOM_SETTINGS"
            else
                ansible-playbook --connection local --inventory "localhost," ci/ansible/pulp_2_tests.yaml \
                    -e pulp_smash_system_hostname="${PULP_SMASH_SYSTEM_HOSTNAME}" \
                    -e pulp_smash_shell_transport="ssh" \
                    -e pulp_smash_amqp_broker_service="${PULP_SMASH_AMQP_BROKER_SERVICE}" \
                    -e pulp_smash_api_scheme="${PULP_SMASH_API_SCHEME}" \
                    -e pulp_smash_api_verify="${PULP_SMASH_API_VERIFY}" \
                    -e pulp_smash_pulp_username="${PULP_SMASH_PULP_USERNAME}" \
                    -e pulp_smash_pulp_password="${PULP_SMASH_PULP_PASSWORD}" \
                    -e pulp_smash_pulp_version="${PULP_SMASH_PULP_VERSION}"
            fi
            source ~/.virtualenvs/pulp-2-tests/bin/activate
            set +e
            py.test -v --color=yes --junit-xml=junit-report.xml --pyargs pulp_2_tests.tests
            set -e
            test -f junit-report.xml
    publishers:
        - archive:
            artifacts: 'junit-report.xml'
        - email-notify-owners
        - delete-slave-node

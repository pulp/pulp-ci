- block:

  - name: Install Python 3 (RHEL)
    package:
      name: python34
      state: present
    when: ansible_distribution == 'RedHat'

  - name: Install Python 3 (non-RHEL)
    package:
      name: python3
      state: present
    when: ansible_distribution != 'RedHat'

  - name: Install git
    package:
      name: git
      state: present

  become: true

# Pulp Smash requires Python 3.4+, and we want to create a Python 3 virtualenv.
# Unfortunately, there's some problems on RHEL 7. (And some other distros.)
# First, `virtualenv -p python3 ...` breaks due to a bug in virtualenv 1.10. [1]
# Second, `python3 -m venv ...` breaks when installing pip. [2]
#
# This Ansible playbook works around the issue by creating a Python 3 virtualenv
# without pip, and then installing pip into the virtualenv with a script
# provided by PyPA. This solution is chosen because it's low impact. Alternative
# solutions require doing things like installing an updated version of pip
# system-wide with pip, instead of the system package manager.
#
# [1] https://github.com/pypa/virtualenv/issues/463#issuecomment-41204800
# [2] http://stackoverflow.com/a/26314477

- name: Print path to virtualenv
  debug:
    msg:  '{{ ansible_user_dir }}/.virtualenvs/pulp-2-tests'

- block:

  - name: Create a Pulp 2 Tests virtualenv (RHEL)
    command: python3 -m venv --without-pip '{{ ansible_user_dir }}/.virtualenvs/pulp-2-tests'
    args:
      creates:  '{{ ansible_user_dir }}/.virtualenvs/pulp-2-tests'
    register: result

  - name: Install pip (RHEL)
    shell: >
      source {{ ansible_user_dir }}/.virtualenvs/pulp-2-tests/bin/activate
      && (which pip || curl https://bootstrap.pypa.io/get-pip.py | python)
    when: result is changed

  when: ansible_distribution == 'RedHat'

- name: Create a Pulp 2 Tests virtualenv (non-RHEL)
  command: python3 -m venv '{{ ansible_user_dir }}/.virtualenvs/pulp-2-tests'
  args:
    creates:  '{{ ansible_user_dir }}/.virtualenvs/pulp-2-tests'
  when: ansible_distribution != 'RedHat'
  register: result

- name: Update pip
  pip:
    virtualenv: '{{ ansible_user_dir }}/.virtualenvs/pulp-2-tests'
    name: pip
    state: latest
  when: result is changed

- name: Install Pulp Smash
  pip:
    virtualenv: '{{ ansible_user_dir }}/.virtualenvs/pulp-2-tests'
    name: '{{ pulp_smash_repo }}'
    state: present

- name: Install Pulp 2 Tests
  pip:
    virtualenv: '{{ ansible_user_dir }}/.virtualenvs/pulp-2-tests'
    name: '{{ pulp_2_tests_repo }}'
    state: present

- name: Install pytest
  pip:
    virtualenv: '{{ ansible_user_dir }}/.virtualenvs/pulp-2-tests'
    name: pytest==4.1.0
    state: present

- name: Create a Pulp Smash configuration directory
  file:
    path: '{{ ansible_user_dir }}/.config/pulp_smash'
    state: directory

- name: Install a Pulp Smash configuration file from a template
  template:
    src: settings.json
    dest: '{{ ansible_user_dir }}/.config/pulp_smash/'
  when: pulp_smash_custom_settings is not defined

- name: Install a Pulp Smash configuration file from the user
  copy:
    src: '{{ pulp_smash_custom_settings }}'
    dest: '{{ ansible_user_dir }}/.config/pulp_smash/settings.json'
  when: pulp_smash_custom_settings is defined
